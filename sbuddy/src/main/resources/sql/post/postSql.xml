<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbuddy.web.post.PostMapper">
	
	<!-- 게시글 작성 -->
	<insert id="writePost" parameterType="HashMap">
		INSERT INTO POST (
			  idx_member
			, title
			, content
			, upload_date
		) VALUES (
			  #{idx_member}
			, #{title}
			, #{content}
			, NOW()
		)
		<selectKey keyProperty="idx" resultType="int" order="AFTER">
	        SELECT max(idx) FROM POST
	    </selectKey>
	</insert>

	<!-- 게시글 키워드 -->
	<insert id="writePostKeyword" parameterType="HashMap">
		INSERT INTO POST_KEYWORD (
			  idx_post
			, idx_keyword
		) VALUES (
			  #{idx_post}
			, #{idx_keyword}
		)
	</insert>

	<!-- 게시글 파일 -->
	<insert id="writePostFile" parameterType="HashMap">
		INSERT INTO POST_FILE (
			  idx_post
			, file_name
			, file_path
			, file_size
		) VALUES (
			  #{idx_post}
			, #{file_name}
			, #{file_path}
			, #{file_size}
		)
	</insert>

	<!-- 내 게시글 -->
	<select id="getMyPostList" parameterType="HashMap">
		SELECT
			  idx AS idx_post
			, title
			, content
			, like_cnt
			, upload_date
		FROM
			POST
		WHERE
			idx_member = #{idx_member}
		ORDER BY
			upload_date DESC
	</select>
	
	<!-- 게시글 상세 -->
	<select id="getPostDetail" parameterType="HashMap" resultType="HashMap">
		SELECT
			  idx AS idx_post
			, idx_member
			, title
			, content
		FROM
			POST
		WHERE
			idx = #{idx_post}
	</select>

	<!-- 게시글 별 키워드 -->
	<select id="getPostKeyword" parameterType="HashMap">
		SELECT
			  k.idx AS idx_keyword 
			, k.code 
			, k.keyword 
			, pk.idx_post 
		FROM
			POST_KEYWORD pk 
		JOIN KEYWORD k 
		ON k.idx = pk.idx_keyword 
		WHERE
			pk.idx_post = #{idx_post}
	</select>
	
	<!-- 게시글 별 파일 -->
	<select id="getPostFile" parameterType="HashMap">
		SELECT
			  p.idx AS idx_post
			, pf.idx AS idx_post_file
			, pf.file_name
			, pf.file_path
		FROM
			POST_FILE pf 
		JOIN POST p 
		ON p.idx = pf.idx_post
		WHERE
			pf.idx_post = #{idx_post}
	</select>
	
	<!-- 글 수정 -->
	<update id="updatePost" parameterType="HashMap">
		UPDATE POST
		SET 
			  title = #{title}
			, content = #{content}
			, update_date = NOW()
		WHERE 
			idx = #{idx_post}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deletePost" parameterType="HashMap">
		DELETE FROM 
			POST
		WHERE 
			idx = #{idx_post}
	</delete>
	
	<!-- 키워드 삭제 -->
	<delete id="deletePostKeyword" parameterType="HashMap">
		DELETE FROM 
			POST_KEYWORD
		WHERE 
			idx_post = #{idx_post}
	</delete>
	
	<!-- 파일 삭제 -->
	<delete id="deletePostFile" parameterType="HashMap">
		DELETE FROM 
			POST_FILE
		WHERE 
			idx_post = #{idx_post}
	</delete>
	
	<!-- 북마크 리스트 -->
	<select id="getBookmarkList" parameterType="HashMap">
		SELECT
			  b.idx AS idx_bookmark
			, p.idx AS idx_post
			, p.title 
			, p.content
			, p.view
			, p.upload_date
			, p.update_date
		FROM
			BOOKMARK b
		JOIN
			POST p
		ON b.idx_post = p.idx
		WHERE
			b.idx_member = #{idx_member}
		ORDER BY
			p.upload_date DESC
	</select>
	
	<!-- 텍스트 검색 -->
	<select id="searchText" parameterType="HashMap">
		SELECT
			  idx AS idx_post
			, idx_member
			, title
			, content
			, like_cnt
			, upload_date
			, update_date
		FROM
			POST
		<if test="search != null and search != ''">
		WHERE
			(
				title LIKE CONCAT('%', #{search}, '%')
				OR
				content LIKE CONCAT('%', #{search}, '%')
			)
		</if>
		ORDER BY
			upload_date DESC
	</select>
	
	<!-- 텍스트 검색 개수 -->
	<select id="searchTextCnt" parameterType="HashMap">
		SELECT
			COUNT(*)
		FROM
			POST
		<if test="search != null and search != ''">
		WHERE
			(
				title LIKE CONCAT('%', #{search}, '%')
				OR
				content LIKE CONCAT('%', #{search}, '%')
			)
		</if>
	</select>
	
	<!-- 키워드 검색 -->
	<select id="searchKeyword" parameterType="HashMap">
		SELECT
			  p.idx AS idx_post
			, p.idx_member
			, p.title
			, p.content
			, p.like_cnt
			, p.upload_date
			, p.update_date
		FROM
			POST p
		JOIN 
			POST_KEYWORD pk
		ON pk.idx_post = p.idx
		JOIN
			KEYWORD k
		ON k.idx = pk.idx_keyword 
		WHERE
			k.idx = #{idx_keyword}
		ORDER BY
			p.upload_date DESC
	</select>
	
	<!-- 키워드 검색 개수 -->
	<select id="searchKeywordCnt" parameterType="HashMap">
		SELECT
			COUNT(*)
		FROM
			POST p
		JOIN 
			POST_KEYWORD pk
		ON pk.idx_post = p.idx
		JOIN
			KEYWORD k
		ON k.idx = pk.idx_keyword 
		WHERE
			k.idx = #{idx_keyword}
		ORDER BY
			p.upload_date DESC
	</select>
	
	<!-- 본인 게시글인지 확인 -->
	<select id="checkMyPost" parameterType="HashMap">
		SELECT
			COUNT(*)
		FROM
			POST 
		WHERE
			idx = #{idx_post}
		AND
			idx_member = #{idx_member}
	</select>
	
	
	
	
	
	<!-- ####### 게시물 메인 ####### -->
	<!-- 게시물 메인 목록 -->
	<select id="getList" parameterType="HashMap" resultType="HashMap">
		SELECT 
			p.idx idx_post
			, m.username
			, m.profile
			, p.upload_date
			, p.update_date
			, pf.file_path
			, p.title
			, p.content
			, p.like_cnt
		FROM
			MEMBER m 
		JOIN
			POST p 
		ON m.idx = p.idx_member 
		JOIN 
			POST_FILE pf 
		ON p.idx = pf.idx_post
		<where>
			<if test="search != null and search != ''">
				AND search LIKE CONCAT('%', #{search}, '%')
			</if>
		</where>
	</select>
	
	<!-- 게시물 메인 목록 갯수 -->
	<select id="getListCnt" parameterType="HashMap" resultType="int">
		SELECT 
			COUNT(*) 
		FROM
			MEMBER m 
		JOIN
			POST p 
		ON m.idx = p.idx_member 
		JOIN 
			POST_FILE pf 
		ON p.idx = pf.idx_post
		<where>
			<if test="search != null and search != ''">
				AND search LIKE CONCAT('%', #{search}, '%')
			</if>
		</where>
	</select>
	
	<!-- 이번주 인기 모집 글 목록 -->
	<select id="getPopularList" resultType="HashMap">
		SELECT
			p.idx idx_post
			, title
			, like_cnt
			, upload_date 
		FROM
			POST p
		WHERE
			upload_date BETWEEN DATE(DATE_SUB(NOW(), INTERVAL 7 DAY)) and NOW()
		ORDER BY
			like_cnt DESC, upload_date DESC
	</select>
	
</mapper>